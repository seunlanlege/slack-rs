/*
 * Slack Web API
 *
 * One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.
 *
 * The version of the OpenAPI document: 1.5.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct ObjsTeamProfileField {
    #[serde(rename = "field_name", skip_serializing_if = "Option::is_none")]
    pub field_name: Option<String>,
    #[serde(rename = "hint")]
    pub hint: String,
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "is_hidden", skip_serializing_if = "Option::is_none")]
    pub is_hidden: Option<bool>,
    #[serde(rename = "label")]
    pub label: String,
    #[serde(rename = "options")]
    pub options: Vec<String>,
    #[serde(rename = "ordering")]
    pub ordering: f32,
    #[serde(rename = "possible_values", skip_serializing_if = "Option::is_none")]
    pub possible_values: Option<Vec<String>>,
    #[serde(rename = "type")]
    pub _type: Type,
}

impl ObjsTeamProfileField {
    pub fn new(hint: String, id: String, label: String, options: Vec<String>, ordering: f32, _type: Type) -> ObjsTeamProfileField {
        ObjsTeamProfileField {
            field_name: None,
            hint,
            id,
            is_hidden: None,
            label,
            options,
            ordering,
            possible_values: None,
            _type,
        }
    }
}

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "text")]
    Text,
    #[serde(rename = "date")]
    Date,
    #[serde(rename = "link")]
    Link,
    #[serde(rename = "mailto")]
    Mailto,
    #[serde(rename = "options_list")]
    OptionsList,
    #[serde(rename = "user")]
    User,
}

